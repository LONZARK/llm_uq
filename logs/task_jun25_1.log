> initializing model parallel with size 1
> initializing ddp with size 1
> initializing pipeline with size 1
Loaded in 5.87 seconds
============ decoded_tokens ============
decoded_tokens ['Here', ' is', ' the', ' missing', ' part', ' of', ' the', ' code', ':\n\n', '```', 'python', '\n', 'from', ' typing', ' import', ' List', '\n\n', 'def', ' has', '_close', '_elements', '(numbers', ':', ' List', '[float', '],', ' threshold', ':', ' float', ')', ' ->', ' bool', ':\n', '   ', ' """', ' Check', ' if', ' in', ' given', ' list', ' of', ' numbers', ',', ' are', ' any', ' two', ' numbers', ' closer', ' to', ' each', ' other', ' than', '\n', '   ', ' given', ' threshold', '.\n', '   ', ' >>>', ' has', '_close', '_elements', '([', '1', '.', '0', ',', ' ', '2', '.', '0', ',', ' ', '3', '.', '0', '],', ' ', '0', '.', '5', ')\n', '   ', ' False', '\n', '   ', ' >>>', ' has', '_close', '_elements', '([', '1', '.', '0', ',', ' ', '2', '.', '8', ',', ' ', '3', '.', '0', ',', ' ', '4', '.', '0', ',', ' ', '5', '.', '0', ',', ' ', '2', '.', '0', '],', ' ', '0', '.', '3', ')\n', '   ', ' True', '\n', '   ', ' """\n', '   ', ' for', ' i', ' in', ' range', '(len', '(numbers', ')):\n', '       ', ' for', ' j', ' in', ' range', '(i', ' +', ' ', '1', ',', ' len', '(numbers', ')):\n', '           ', ' if', ' abs', '(numbers', '[i', ']', ' -', ' numbers', '[j', '])', ' <=', ' threshold', ':\n', '               ', ' return', ' True', '\n', '   ', ' return', ' False', '\n', '``', '`\n\n', 'This', ' function', ' iter', 'ates', ' over', ' the', ' list', ' of', ' numbers', ' and', ' checks', ' if', ' any', ' two', ' numbers', ' are', ' closer', ' to', ' each', ' other', ' than', ' the', ' given', ' threshold', '.', ' If', ' it', ' finds', ' any', ' such', ' pair', ',', ' it', ' immediately', ' returns', ' `', 'True', '`.', ' If', ' it', ' doesn', "'t", ' find', ' any', ' such', ' pair', ' after', ' checking', ' all', ' numbers', ',', ' it', ' returns', ' `', 'False', '`.', '<|eot_id|>']
============ prob_vectors =============
prob_vectors [tensor([[1.1353e-12, 3.9795e-10, 1.4785e-09,  ..., 3.6650e-12, 3.6650e-12,
         3.6650e-12]], dtype=torch.float32), tensor([[2.4568e-10, 4.0506e-10, 3.0447e-12,  ..., 1.3666e-14, 1.3666e-14,
         1.3666e-14]], dtype=torch.float32), tensor([[2.0671e-15, 1.3987e-15, 1.4147e-17,  ..., 2.0189e-16, 2.0229e-16,
         2.0229e-16]], dtype=torch.float32), tensor([[2.5529e-12, 7.3870e-12, 2.1285e-13,  ..., 3.3096e-13, 3.3096e-13,
         3.3096e-13]], dtype=torch.float32), tensor([[9.9995e-13, 1.5979e-12, 1.0476e-14,  ..., 8.8349e-15, 8.8392e-15,
         8.8392e-15]], dtype=torch.float32), tensor([[4.5613e-10, 2.3936e-12, 6.0865e-14,  ..., 3.5428e-15, 3.5428e-15,
         3.5428e-15]], dtype=torch.float32), tensor([[7.3953e-17, 3.4734e-16, 2.0133e-19,  ..., 8.0420e-18, 8.0420e-18,
         8.0420e-18]], dtype=torch.float32), tensor([[3.1737e-12, 7.6134e-12, 1.5078e-13,  ..., 2.9868e-13, 2.9868e-13,
         2.9868e-13]], dtype=torch.float32), tensor([[4.4217e-09, 2.6293e-11, 3.1402e-12,  ..., 7.0744e-14, 7.0744e-14,
         7.0744e-14]], dtype=torch.float32), tensor([[1.4047e-10, 7.2045e-09, 9.8474e-09,  ..., 2.0036e-12, 2.0036e-12,
         2.0036e-12]], dtype=torch.float32), tensor([[1.4436e-11, 7.2591e-12, 1.9929e-10,  ..., 9.0341e-12, 9.0341e-12,
         9.0341e-12]], dtype=torch.float32), tensor([[4.9803e-13, 1.4868e-12, 1.6552e-13,  ..., 1.6330e-12, 1.6330e-12,
         1.6330e-12]], dtype=torch.float32), tensor([[2.4507e-11, 4.9224e-10, 3.4853e-07,  ..., 4.0637e-12, 4.0637e-12,
         4.0637e-12]], dtype=torch.float32), tensor([[3.9620e-12, 7.9554e-13, 7.4153e-13,  ..., 2.0201e-12, 2.0201e-12,
         2.0196e-12]], dtype=torch.float32), tensor([[2.9909e-14, 1.1441e-14, 1.2763e-14,  ..., 4.4936e-15, 4.4892e-15,
         4.4892e-15]], dtype=torch.float32), tensor([[6.6355e-14, 6.1368e-14, 3.5517e-14,  ..., 1.1579e-12, 1.1579e-12,
         1.1579e-12]], dtype=torch.float32), tensor([[1.1364e-11, 1.4364e-12, 8.1388e-11,  ..., 5.0932e-11, 5.0932e-11,
         5.0932e-11]], dtype=torch.float32), tensor([[2.3159e-13, 6.2238e-11, 4.4506e-07,  ..., 7.6370e-14, 7.6370e-14,
         7.6370e-14]], dtype=torch.float32), tensor([[1.3196e-13, 2.3752e-14, 6.5189e-15,  ..., 3.8067e-14, 3.8067e-14,
         3.8067e-14]], dtype=torch.float32), tensor([[1.7335e-17, 3.4278e-16, 7.8627e-15,  ..., 1.2519e-12, 1.2519e-12,
         1.2519e-12]], dtype=torch.float32), tensor([[1.2033e-16, 2.5727e-15, 2.7904e-14,  ..., 2.7076e-13, 2.7076e-13,
         2.7076e-13]], dtype=torch.float32), tensor([[1.4462e-14, 5.4270e-13, 2.1252e-13,  ..., 1.8249e-13, 1.8249e-13,
         1.8249e-13]], dtype=torch.float32), tensor([[1.2737e-15, 1.4891e-15, 6.2074e-16,  ..., 5.8313e-16, 5.8313e-16,
         5.8313e-16]], dtype=torch.float32), tensor([[1.0680e-17, 3.7492e-18, 2.3230e-19,  ..., 6.3474e-17, 6.3474e-17,
         6.3474e-17]], dtype=torch.float32), tensor([[1.6707e-16, 1.2759e-16, 3.9066e-17,  ..., 4.8824e-15, 4.8824e-15,
         4.8824e-15]], dtype=torch.float32), tensor([[1.2397e-13, 3.7071e-15, 3.8248e-15,  ..., 1.0706e-14, 1.0706e-14,
         1.0706e-14]], dtype=torch.float32), tensor([[1.8716e-14, 7.1446e-16, 1.7139e-15,  ..., 5.8646e-17, 5.8646e-17,
         5.8646e-17]], dtype=torch.float32), tensor([[9.3184e-16, 1.0832e-14, 3.8542e-16,  ..., 3.6207e-16, 3.6207e-16,
         3.6207e-16]], dtype=torch.float32), tensor([[3.0425e-17, 9.9343e-19, 1.4998e-19,  ..., 1.7050e-17, 1.7050e-17,
         1.7050e-17]], dtype=torch.float32), tensor([[7.7136e-13, 3.4034e-12, 2.6394e-14,  ..., 7.4025e-14, 7.4025e-14,
         7.4025e-14]], dtype=torch.float32), tensor([[4.2242e-17, 2.7118e-16, 7.4561e-18,  ..., 6.1240e-15, 6.1240e-15,
         6.1240e-15]], dtype=torch.float32), tensor([[8.1594e-16, 6.8854e-15, 3.6988e-17,  ..., 2.7734e-16, 2.7734e-16,
         2.7734e-16]], dtype=torch.float32), tensor([[8.3529e-16, 4.8620e-17, 1.2416e-16,  ..., 1.2365e-17, 1.2365e-17,
         1.2365e-17]], dtype=torch.float32), tensor([[5.1974e-15, 9.4112e-15, 1.0161e-11,  ..., 7.2158e-15, 7.2158e-15,
         7.2158e-15]], dtype=torch.float32), tensor([[6.3156e-14, 1.5001e-14, 3.4544e-13,  ..., 8.6506e-13, 8.6506e-13,
         8.6506e-13]], dtype=torch.float32), tensor([[2.8351e-12, 3.3475e-11, 3.3475e-11,  ..., 7.2363e-15, 7.2363e-15,
         7.2363e-15]], dtype=torch.float32), tensor([[9.0834e-17, 5.1245e-18, 3.4674e-18,  ..., 1.5966e-19, 1.5966e-19,
         1.5966e-19]], dtype=torch.float32), tensor([[8.3529e-16, 3.0729e-16, 4.1587e-17,  ..., 2.3098e-18, 2.3098e-18,
         2.3098e-18]], dtype=torch.float32), tensor([[1.4976e-16, 3.7066e-16, 2.4448e-17,  ..., 5.9786e-19, 5.9786e-19,
         5.9786e-19]], dtype=torch.float32), tensor([[6.6455e-17, 2.8139e-17, 5.8983e-18,  ..., 1.3340e-19, 1.3340e-19,
         1.3340e-19]], dtype=torch.float32), tensor([[2.9155e-15, 5.2792e-15, 7.3714e-16,  ..., 1.7001e-17, 1.7001e-17,
         1.7001e-17]], dtype=torch.float32), tensor([[3.1213e-16, 2.2482e-16, 4.2907e-17,  ..., 1.6637e-18, 1.6637e-18,
         1.6637e-18]], dtype=torch.float32), tensor([[3.3035e-15, 2.7387e-15, 5.7736e-17,  ..., 5.8645e-17, 5.8645e-17,
         5.8645e-17]], dtype=torch.float32), tensor([[7.7089e-17, 3.2962e-17, 1.2833e-17,  ..., 1.9915e-17, 1.9915e-17,
         1.9895e-17]], dtype=torch.float32), tensor([[1.3216e-16, 9.6692e-17, 4.5578e-18,  ..., 2.1151e-19, 2.1151e-19,
         2.1151e-19]], dtype=torch.float32), tensor([[3.0426e-17, 7.7694e-17, 4.8518e-18,  ..., 7.3097e-20, 7.3097e-20,
         7.3097e-20]], dtype=torch.float32), tensor([[4.2842e-14, 3.1344e-14, 8.9802e-15,  ..., 7.1855e-17, 7.1855e-17,
         7.1855e-17]], dtype=torch.float32), tensor([[3.1476e-12, 8.1643e-12, 6.5977e-13,  ..., 4.5866e-15, 4.5866e-15,
         4.5866e-15]], dtype=torch.float32), tensor([[1.4047e-13, 1.1049e-12, 1.1646e-13,  ..., 7.6950e-16, 7.6950e-16,
         7.6950e-16]], dtype=torch.float32), tensor([[1.3771e-15, 1.2274e-14, 3.9455e-16,  ..., 8.2529e-18, 8.2529e-18,
         8.2529e-18]], dtype=torch.float32), tensor([[1.9776e-13, 1.5890e-13, 1.9889e-14,  ..., 1.4044e-16, 1.4044e-16,
         1.3826e-16]], dtype=torch.float32), tensor([[1.5755e-14, 2.8813e-13, 2.7809e-15,  ..., 8.1221e-18, 8.1221e-18,
         8.1221e-18]], dtype=torch.float32), tensor([[1.5569e-11, 5.6948e-11, 1.2510e-11,  ..., 3.1268e-13, 3.1261e-13,
         3.1264e-13]], dtype=torch.float32), tensor([[1.2364e-11, 1.7610e-10, 1.2488e-10,  ..., 7.7212e-13, 7.7212e-13,
         7.7212e-13]], dtype=torch.float32), tensor([[1.6159e-17, 3.5220e-18, 2.9032e-17,  ..., 6.2735e-17, 6.2735e-17,
         6.2735e-17]], dtype=torch.float32), tensor([[2.6546e-15, 1.5605e-15, 2.8703e-15,  ..., 1.5540e-17, 1.5540e-17,
         1.5540e-17]], dtype=torch.float32), tensor([[1.0192e-11, 5.1839e-14, 6.1561e-14,  ..., 6.9214e-14, 6.9214e-14,
         6.9214e-14]], dtype=torch.float32), tensor([[6.1983e-11, 1.1948e-10, 7.9588e-11,  ..., 1.3273e-12, 1.3273e-12,
         1.3273e-12]], dtype=torch.float32), tensor([[4.1106e-13, 4.1993e-14, 7.1025e-13,  ..., 4.3085e-12, 4.3085e-12,
         4.3085e-12]], dtype=torch.float32), tensor([[4.3022e-12, 1.2717e-12, 1.1879e-11,  ..., 3.4156e-14, 3.4156e-14,
         3.4156e-14]], dtype=torch.float32), tensor([[1.0738e-18, 4.0929e-17, 4.1988e-16,  ..., 2.3153e-13, 2.3153e-13,
         2.3153e-13]], dtype=torch.float32), tensor([[4.3826e-18, 1.9530e-16, 4.0703e-16,  ..., 2.8819e-13, 2.8819e-13,
         2.8819e-13]], dtype=torch.float32), tensor([[1.3445e-14, 7.7414e-15, 5.8103e-14,  ..., 7.8799e-14, 7.8799e-14,
         7.8799e-14]], dtype=torch.float32), tensor([[2.3896e-13, 5.6519e-16, 3.4425e-14,  ..., 1.9080e-16, 1.9080e-16,
         1.9080e-16]], dtype=torch.float32), tensor([[7.4449e-15, 8.7538e-16, 8.6181e-16,  ..., 7.4136e-17, 7.4136e-17,
         7.4136e-17]], dtype=torch.float32), tensor([[8.8357e-19, 8.1203e-22, 3.5368e-19,  ..., 1.9638e-19, 1.9638e-19,
         1.9562e-19]], dtype=torch.float32), tensor([[5.7409e-16, 1.0957e-16, 1.8349e-16,  ..., 3.4208e-17, 3.4208e-17,
         3.4208e-17]], dtype=torch.float32), tensor([[1.8027e-17, 5.1030e-20, 1.3058e-18,  ..., 6.6575e-18, 6.6575e-18,
         6.6575e-18]], dtype=torch.float32), tensor([[2.9076e-20, 1.1500e-19, 1.2507e-19,  ..., 3.7044e-20, 3.7044e-20,
         3.7044e-20]], dtype=torch.float32), tensor([[2.4937e-15, 1.3636e-16, 2.6284e-16,  ..., 5.7616e-18, 5.7616e-18,
         5.7616e-18]], dtype=torch.float32), tensor([[4.0307e-17, 1.0973e-19, 1.2585e-17,  ..., 8.1717e-19, 8.1717e-19,
         8.1717e-19]], dtype=torch.float32), tensor([[1.6970e-16, 2.3328e-17, 5.5093e-17,  ..., 1.0934e-17, 1.0934e-17,
         1.0934e-17]], dtype=torch.float32), tensor([[5.9911e-18, 9.8926e-21, 1.5235e-19,  ..., 1.5180e-17, 1.5299e-17,
         1.5299e-17]], dtype=torch.float32), tensor([[3.8600e-19, 1.9258e-19, 3.0905e-17,  ..., 1.8343e-18, 1.8343e-18,
         1.8343e-18]], dtype=torch.float32), tensor([[7.1446e-16, 1.7609e-17, 4.6393e-17,  ..., 1.8745e-17, 1.8745e-17,
         1.8745e-17]], dtype=torch.float32), tensor([[5.2256e-18, 2.6064e-20, 1.9536e-18,  ..., 1.5447e-18, 1.5447e-18,
         1.5447e-18]], dtype=torch.float32), tensor([[7.0635e-14, 1.3090e-15, 3.1344e-14,  ..., 1.1023e-15, 1.1023e-15,
         1.1001e-15]], dtype=torch.float32), tensor([[1.5605e-15, 1.2091e-17, 6.2429e-17,  ..., 5.6400e-17, 5.6400e-17,
         5.6400e-17]], dtype=torch.float32), tensor([[1.6702e-18, 7.4673e-21, 2.4833e-17,  ..., 1.3340e-19, 1.3340e-19,
         1.3340e-19]], dtype=torch.float32), tensor([[1.0395e-15, 5.5093e-17, 1.0395e-15,  ..., 7.1147e-18, 7.1147e-18,
         7.1147e-18]], dtype=torch.float32), tensor([[2.3695e-17, 2.6891e-20, 4.5674e-17,  ..., 4.2894e-19, 4.2894e-19,
         4.2894e-19]], dtype=torch.float32), tensor([[2.4937e-15, 4.2089e-15, 6.2335e-14,  ..., 1.3039e-15, 1.3039e-15,
         1.3039e-15]], dtype=torch.float32), tensor([[1.2863e-14, 6.6354e-14, 1.3751e-12,  ..., 1.9923e-14, 1.9923e-14,
         1.9923e-14]], dtype=torch.float32), tensor([[2.8419e-16, 6.6455e-17, 4.1599e-15,  ..., 9.6815e-15, 9.6910e-15,
         9.6910e-15]], dtype=torch.float32), tensor([[1.2417e-15, 1.0499e-14, 2.5437e-13,  ..., 9.3380e-15, 9.3380e-15,
         9.3380e-15]], dtype=torch.float32), tensor([[2.8539e-14, 6.4682e-15, 3.9397e-13,  ..., 7.7858e-16, 7.7858e-16,
         7.7858e-16]], dtype=torch.float32), tensor([[1.1712e-14, 6.1111e-16, 8.8251e-14,  ..., 7.2593e-14, 7.2735e-14,
         7.2735e-14]], dtype=torch.float32), tensor([[3.7222e-14, 7.1597e-15, 9.6547e-14,  ..., 1.5605e-15, 1.5605e-15,
         1.5605e-15]], dtype=torch.float32), tensor([[1.9847e-19, 1.2279e-17, 4.5621e-17,  ..., 5.9073e-13, 5.9073e-13,
         5.9073e-13]], dtype=torch.float32), tensor([[1.7881e-17, 3.9446e-16, 1.7957e-15,  ..., 4.8257e-13, 4.8257e-13,
         4.8257e-13]], dtype=torch.float32), tensor([[4.8622e-15, 1.1872e-15, 4.0123e-15,  ..., 2.8989e-14, 2.8989e-14,
         2.8989e-14]], dtype=torch.float32), tensor([[1.1287e-13, 1.0455e-16, 8.7039e-15,  ..., 3.3942e-17, 3.3942e-17,
         3.3942e-17]], dtype=torch.float32), tensor([[1.7683e-15, 3.7066e-16, 2.7061e-17,  ..., 1.1063e-17, 1.1019e-17,
         1.1063e-17]], dtype=torch.float32), tensor([[2.3462e-18, 1.4394e-20, 1.5751e-18,  ..., 3.6262e-19, 3.6262e-19,
         3.6262e-19]], dtype=torch.float32), tensor([[1.4515e-16, 1.9954e-17, 2.3328e-17,  ..., 9.0643e-18, 9.0643e-18,
         9.0643e-18]], dtype=torch.float32), tensor([[9.3717e-17, 1.2052e-19, 2.6173e-18,  ..., 4.1587e-17, 4.1587e-17,
         4.1587e-17]], dtype=torch.float32), tensor([[8.1702e-17, 6.6455e-17, 2.4691e-16,  ..., 8.9938e-18, 8.9938e-18,
         8.9938e-18]], dtype=torch.float32), tensor([[1.3066e-14, 1.6707e-16, 2.9155e-15,  ..., 3.6988e-17, 3.6988e-17,
         3.6988e-17]], dtype=torch.float32), tensor([[2.5330e-15, 7.1146e-18, 1.0234e-15,  ..., 2.0110e-17, 2.0110e-17,
         2.0110e-17]], dtype=torch.float32), tensor([[1.3909e-14, 1.4859e-16, 5.1168e-15,  ..., 4.1750e-17, 4.1750e-17,
         4.1750e-17]], dtype=torch.float32), tensor([[1.7884e-18, 4.6729e-21, 5.1834e-20,  ..., 5.2460e-18, 5.2460e-18,
         5.2460e-18]], dtype=torch.float32), tensor([[2.2475e-18, 8.5151e-18, 1.6803e-17,  ..., 3.3537e-19, 3.3537e-19,
         3.3537e-19]], dtype=torch.float32), tensor([[5.7409e-16, 1.0680e-17, 7.5146e-18,  ..., 5.7168e-18, 5.7168e-18,
         5.7168e-18]], dtype=torch.float32), tensor([[1.8493e-16, 1.5148e-18, 5.0953e-17,  ..., 1.0271e-17, 1.0271e-17,
         1.0271e-17]], dtype=torch.float32), tensor([[5.2271e-16, 2.4833e-17, 9.2264e-17,  ..., 4.5674e-17, 4.5674e-17,
         4.5674e-17]], dtype=torch.float32), tensor([[3.1886e-17, 1.4851e-20, 2.2515e-19,  ..., 7.3559e-17, 7.3559e-17,
         7.3559e-17]], dtype=torch.float32), tensor([[1.2539e-15, 6.3279e-18, 1.2937e-15,  ..., 1.7435e-18, 1.7435e-18,
         1.7435e-18]], dtype=torch.float32), tensor([[7.8468e-16, 7.7694e-17, 2.9954e-17,  ..., 1.0597e-17, 1.0597e-17,
         1.0597e-17]], dtype=torch.float32), tensor([[1.5908e-17, 3.0298e-19, 1.3058e-18,  ..., 1.7300e-18, 1.7300e-18,
         1.7300e-18]], dtype=torch.float32), tensor([[3.3749e-16, 3.4136e-18, 1.8745e-17,  ..., 1.0680e-17, 1.0680e-17,
         1.0680e-17]], dtype=torch.float32), tensor([[1.8027e-17, 8.4616e-21, 1.8666e-19,  ..., 3.7571e-17, 3.7571e-17,
         3.7571e-17]], dtype=torch.float32), tensor([[1.8454e-17, 3.3466e-20, 3.3607e-18,  ..., 1.1566e-20, 1.1566e-20,
         1.1566e-20]], dtype=torch.float32), tensor([[1.2937e-15, 1.7237e-16, 7.5304e-17,  ..., 2.7061e-17, 2.7061e-17,
         2.7061e-17]], dtype=torch.float32), tensor([[5.7720e-19, 7.1254e-21, 7.1404e-20,  ..., 2.9366e-19, 2.9337e-19,
         2.9337e-19]], dtype=torch.float32), tensor([[8.3529e-16, 1.1663e-16, 1.5942e-16,  ..., 3.6131e-17, 3.6131e-17,
         3.6131e-17]], dtype=torch.float32), tensor([[1.0787e-16, 4.6926e-19, 1.9912e-18,  ..., 5.9570e-17, 5.9570e-17,
         5.9570e-17]], dtype=torch.float32), tensor([[6.0164e-16, 2.1575e-17, 1.2345e-15,  ..., 3.5220e-18, 3.5220e-18,
         3.5220e-18]], dtype=torch.float32), tensor([[1.0076e-15, 1.0133e-16, 5.6842e-17,  ..., 2.6228e-17, 2.6228e-17,
         2.6228e-17]], dtype=torch.float32), tensor([[1.7609e-17, 6.4508e-20, 1.0597e-17,  ..., 5.0352e-18, 5.0352e-18,
         5.0352e-18]], dtype=torch.float32), tensor([[1.5428e-13, 3.4019e-15, 4.5605e-14,  ..., 1.0194e-15, 1.0194e-15,
         1.0194e-15]], dtype=torch.float32), tensor([[6.3051e-16, 8.4406e-18, 3.9067e-17,  ..., 1.5846e-17, 1.5846e-17,
         1.5846e-17]], dtype=torch.float32), tensor([[2.7159e-19, 8.2013e-21, 5.2872e-18,  ..., 1.0696e-20, 1.0696e-20,
         1.0696e-20]], dtype=torch.float32), tensor([[2.6134e-15, 1.8244e-15, 6.7786e-15,  ..., 8.7696e-17, 8.7696e-17,
         8.7696e-17]], dtype=torch.float32), tensor([[1.6899e-18, 3.1934e-20, 8.1889e-18,  ..., 9.4641e-20, 9.4641e-20,
         9.4618e-20]], dtype=torch.float32), tensor([[3.1771e-15, 6.9938e-15, 1.5428e-13,  ..., 9.2458e-16, 9.2458e-16,
         9.2458e-16]], dtype=torch.float32), tensor([[3.7222e-14, 4.5605e-14, 1.0380e-12,  ..., 1.6009e-14, 1.6009e-14,
         1.6009e-14]], dtype=torch.float32), tensor([[4.0709e-16, 2.9321e-16, 1.3772e-15,  ..., 7.4740e-15, 7.4740e-15,
         7.4740e-15]], dtype=torch.float32), tensor([[1.5824e-12, 5.6100e-12, 3.7371e-12,  ..., 1.0481e-11, 1.0481e-11,
         1.0481e-11]], dtype=torch.float32), tensor([[1.0161e-11, 3.0035e-12, 6.9833e-12,  ..., 1.9123e-14, 1.9123e-14,
         1.9123e-14]], dtype=torch.float32), tensor([[3.1497e-14, 5.0407e-17, 6.3989e-15,  ..., 5.5611e-13, 5.5611e-13,
         5.5611e-13]], dtype=torch.float32), tensor([[5.1109e-14, 1.2776e-12, 7.5739e-09,  ..., 2.4767e-13, 2.4767e-13,
         2.4767e-13]], dtype=torch.float32), tensor([[3.5427e-12, 7.9668e-13, 7.9095e-09,  ..., 1.5815e-11, 1.5877e-11,
         1.5815e-11]], dtype=torch.float32), tensor([[6.4150e-14, 7.7975e-15, 2.3279e-14,  ..., 2.1407e-13, 2.1407e-13,
         2.1407e-13]], dtype=torch.float32), tensor([[1.3504e-12, 3.0607e-13, 1.1128e-13,  ..., 1.2610e-13, 1.2610e-13,
         1.2610e-13]], dtype=torch.float32), tensor([[5.7737e-17, 8.7696e-17, 7.6169e-19,  ..., 1.1801e-16, 1.1801e-16,
         1.1801e-16]], dtype=torch.float32), tensor([[1.1669e-14, 2.6400e-14, 3.2404e-15,  ..., 6.0557e-13, 6.0557e-13,
         6.0557e-13]], dtype=torch.float32), tensor([[3.2018e-15, 4.0245e-14, 3.7991e-14,  ..., 2.7288e-13, 2.7288e-13,
         2.7288e-13]], dtype=torch.float32), tensor([[3.4464e-12, 1.0616e-11, 7.5611e-15,  ..., 1.7703e-13, 1.7703e-13,
         1.7703e-13]], dtype=torch.float32), tensor([[3.2203e-16, 2.6964e-15, 1.5894e-10,  ..., 2.2706e-15, 2.2706e-15,
         2.2706e-15]], dtype=torch.float32), tensor([[1.8637e-16, 8.4485e-18, 2.2447e-13,  ..., 3.4217e-15, 3.4217e-15,
         3.4217e-15]], dtype=torch.float32), tensor([[3.9467e-14, 8.1128e-15, 9.8819e-15,  ..., 1.2738e-14, 1.2738e-14,
         1.2738e-14]], dtype=torch.float32), tensor([[6.4818e-14, 3.8404e-14, 1.6229e-14,  ..., 1.3507e-14, 1.3507e-14,
         1.3507e-14]], dtype=torch.float32), tensor([[2.1581e-15, 6.4179e-15, 8.8039e-17,  ..., 6.2074e-16, 6.2074e-16,
         6.1832e-16]], dtype=torch.float32), tensor([[5.4765e-16, 5.1555e-15, 2.0427e-15,  ..., 2.1751e-13, 2.1751e-13,
         2.1751e-13]], dtype=torch.float32), tensor([[3.2753e-12, 1.0365e-13, 4.8683e-13,  ..., 1.7733e-14, 1.7733e-14,
         1.7733e-14]], dtype=torch.float32), tensor([[1.6101e-15, 3.0243e-18, 2.4684e-18,  ..., 2.5027e-17, 2.5027e-17,
         2.5027e-17]], dtype=torch.float32), tensor([[2.1620e-16, 2.3098e-18, 1.8168e-17,  ..., 2.9721e-17, 2.9721e-17,
         2.9721e-17]], dtype=torch.float32), tensor([[2.0880e-14, 9.1739e-16, 6.9103e-17,  ..., 8.8916e-16, 8.8916e-16,
         8.8916e-16]], dtype=torch.float32), tensor([[1.5598e-18, 1.1566e-20, 8.2013e-21,  ..., 9.9610e-19, 9.9634e-19,
         9.9659e-19]], dtype=torch.float32), tensor([[7.1444e-16, 1.5691e-14, 8.4359e-15,  ..., 5.5009e-14, 5.5009e-14,
         5.5009e-14]], dtype=torch.float32), tensor([[5.6750e-14, 1.4400e-16, 6.6447e-17,  ..., 4.5231e-16, 4.5231e-16,
         4.5231e-16]], dtype=torch.float32), tensor([[3.8323e-15, 1.2790e-13, 5.9053e-10,  ..., 9.0506e-15, 9.0506e-15,
         9.0506e-15]], dtype=torch.float32), tensor([[1.0638e-14, 4.3658e-15, 1.3992e-10,  ..., 9.4814e-14, 9.4814e-14,
         9.4814e-14]], dtype=torch.float32), tensor([[4.1441e-13, 3.8779e-13, 1.1895e-14,  ..., 2.8468e-13, 2.8468e-13,
         2.8482e-13]], dtype=torch.float32), tensor([[1.0195e-13, 1.1398e-12, 1.7343e-13,  ..., 1.2518e-12, 1.2518e-12,
         1.2518e-12]], dtype=torch.float32), tensor([[8.3546e-16, 4.4371e-16, 1.9886e-15,  ..., 4.6964e-15, 4.6964e-15,
         4.6964e-15]], dtype=torch.float32), tensor([[3.2779e-15, 3.2987e-12, 3.8926e-15,  ..., 7.8021e-15, 7.8021e-15,
         7.8021e-15]], dtype=torch.float32), tensor([[4.3766e-15, 1.2434e-19, 1.6803e-17,  ..., 7.3405e-18, 7.3405e-18,
         7.3405e-18]], dtype=torch.float32), tensor([[2.1836e-15, 4.2420e-15, 1.1940e-16,  ..., 2.5224e-17, 2.5224e-17,
         2.5224e-17]], dtype=torch.float32), tensor([[5.4780e-16, 3.5646e-16, 2.4619e-16,  ..., 1.8971e-15, 1.8971e-15,
         1.8971e-15]], dtype=torch.float32), tensor([[5.3946e-14, 8.3228e-14, 5.8787e-14,  ..., 2.7123e-14, 2.7121e-14,
         2.7121e-14]], dtype=torch.float32), tensor([[2.5347e-12, 2.7838e-12, 5.5130e-14,  ..., 2.6659e-14, 2.6659e-14,
         2.6659e-14]], dtype=torch.float32), tensor([[6.9938e-15, 4.0948e-16, 8.8729e-17,  ..., 1.0620e-16, 1.0620e-16,
         1.0620e-16]], dtype=torch.float32), tensor([[4.4635e-13, 6.2325e-14, 1.4574e-14,  ..., 6.2194e-15, 6.2194e-15,
         6.2194e-15]], dtype=torch.float32), tensor([[2.4170e-15, 1.3272e-14, 1.4784e-11,  ..., 1.3772e-15, 1.3772e-15,
         1.3772e-15]], dtype=torch.float32), tensor([[2.2040e-18, 2.5368e-18, 1.6777e-14,  ..., 1.9154e-16, 1.9154e-16,
         1.9154e-16]], dtype=torch.float32), tensor([[5.3398e-17, 5.9231e-16, 3.2642e-17,  ..., 5.6502e-18, 5.6502e-18,
         5.6502e-18]], dtype=torch.float32), tensor([[7.8181e-13, 3.0497e-13, 1.9130e-10,  ..., 1.3643e-11, 1.3643e-11,
         1.3643e-11]], dtype=torch.float32), tensor([[3.0682e-13, 2.5436e-13, 4.8956e-10,  ..., 8.2580e-14, 8.2580e-14,
         8.2580e-14]], dtype=torch.float32), tensor([[2.1196e-18, 8.0281e-20, 4.0709e-16,  ..., 2.5923e-17, 2.5923e-17,
         2.5923e-17]], dtype=torch.float32), tensor([[1.0293e-16, 9.0317e-16, 1.8892e-17,  ..., 1.1548e-17, 1.1548e-17,
         1.1548e-17]], dtype=torch.float32), tensor([[7.8322e-13, 6.0997e-13, 1.1691e-11,  ..., 1.0258e-10, 1.0258e-10,
         1.0258e-10]], dtype=torch.float32), tensor([[1.2705e-13, 5.4022e-12, 3.1397e-10,  ..., 6.8004e-14, 6.8004e-14,
         6.8004e-14]], dtype=torch.float32), tensor([[1.6938e-17, 2.4401e-18, 1.1944e-15,  ..., 6.1862e-14, 6.1862e-14,
         6.1862e-14]], dtype=torch.float32), tensor([[2.5360e-13, 4.1337e-11, 8.2208e-11,  ..., 4.5209e-13, 4.5209e-13,
         4.5209e-13]], dtype=torch.float32), tensor([[2.3612e-12, 1.3773e-12, 4.1032e-13,  ..., 8.2390e-14, 8.2390e-14,
         8.2390e-14]], dtype=torch.float32), tensor([[1.7269e-10, 2.1491e-10, 7.3119e-11,  ..., 6.6696e-12, 6.6957e-12,
         6.6957e-12]], dtype=torch.float32), tensor([[1.6970e-16, 2.3195e-16, 6.5425e-17,  ..., 8.6311e-19, 8.6311e-19,
         8.6311e-19]], dtype=torch.float32), tensor([[7.4707e-14, 2.3507e-14, 2.1481e-16,  ..., 8.5292e-16, 8.5292e-16,
         8.5292e-16]], dtype=torch.float32), tensor([[3.0983e-14, 7.4326e-14, 3.8019e-17,  ..., 2.0198e-15, 2.0198e-15,
         2.0198e-15]], dtype=torch.float32), tensor([[2.9981e-14, 2.1640e-13, 6.5721e-16,  ..., 6.5220e-15, 6.5220e-15,
         6.5220e-15]], dtype=torch.float32), tensor([[1.8775e-12, 2.1487e-11, 1.1077e-14,  ..., 1.5228e-15, 1.5228e-15,
         1.5228e-15]], dtype=torch.float32), tensor([[4.6129e-16, 1.7683e-15, 2.7429e-18,  ..., 3.0973e-17, 3.0984e-17,
         3.0974e-17]], dtype=torch.float32), tensor([[6.2468e-09, 2.6602e-10, 6.1824e-13,  ..., 1.2103e-13, 1.2103e-13,
         1.2103e-13]], dtype=torch.float32), tensor([[1.0971e-12, 3.3987e-13, 7.8166e-14,  ..., 4.1070e-14, 4.1070e-14,
         4.1070e-14]], dtype=torch.float32), tensor([[6.4981e-12, 8.7943e-13, 1.3564e-14,  ..., 2.7293e-14, 2.7293e-14,
         2.7293e-14]], dtype=torch.float32), tensor([[6.8183e-13, 3.2715e-13, 9.1889e-16,  ..., 1.9647e-14, 1.9647e-14,
         1.9647e-14]], dtype=torch.float32), tensor([[1.5796e-13, 2.4850e-13, 3.6146e-15,  ..., 5.3082e-15, 5.3082e-15,
         5.3056e-15]], dtype=torch.float32), tensor([[4.9500e-13, 5.0279e-13, 3.7141e-14,  ..., 1.6905e-14, 1.6905e-14,
         1.6905e-14]], dtype=torch.float32), tensor([[4.4936e-11, 3.1192e-10, 6.6668e-13,  ..., 8.9501e-14, 8.9501e-14,
         8.9501e-14]], dtype=torch.float32), tensor([[1.0132e-11, 9.3172e-11, 1.0615e-13,  ..., 3.7701e-14, 3.7701e-14,
         3.7701e-14]], dtype=torch.float32), tensor([[1.3146e-13, 6.8878e-13, 9.6334e-16,  ..., 1.7441e-16, 1.7441e-16,
         1.7441e-16]], dtype=torch.float32), tensor([[5.5093e-17, 8.0161e-17, 6.5396e-20,  ..., 4.0211e-20, 4.0211e-20,
         4.0211e-20]], dtype=torch.float32), tensor([[3.3036e-15, 3.3036e-15, 5.0854e-17,  ..., 3.9291e-18, 3.9291e-18,
         3.9291e-18]], dtype=torch.float32), tensor([[5.5006e-14, 7.5185e-14, 6.1808e-18,  ..., 1.2292e-17, 1.2292e-17,
         1.2292e-17]], dtype=torch.float32), tensor([[3.1034e-15, 2.8257e-15, 4.0137e-19,  ..., 1.8854e-17, 1.8854e-17,
         1.8854e-17]], dtype=torch.float32), tensor([[5.1759e-16, 4.9493e-15, 1.3474e-17,  ..., 4.8711e-17, 4.8711e-17,
         4.8711e-17]], dtype=torch.float32), tensor([[1.0089e-14, 4.6649e-14, 1.0254e-16,  ..., 4.5816e-17, 4.5816e-17,
         4.5816e-17]], dtype=torch.float32), tensor([[6.6874e-10, 1.8310e-13, 1.6929e-15,  ..., 1.1681e-15, 1.1681e-15,
         1.1681e-15]], dtype=torch.float32), tensor([[1.6924e-16, 1.4621e-15, 1.5410e-16,  ..., 9.5194e-12, 9.5194e-12,
         9.5194e-12]], dtype=torch.float32), tensor([[7.7665e-14, 7.0715e-14, 4.5465e-16,  ..., 2.6112e-15, 2.6112e-15,
         2.6112e-15]], dtype=torch.float32), tensor([[4.2997e-16, 1.5125e-15, 1.1597e-15,  ..., 1.9189e-17, 1.9189e-17,
         1.9189e-17]], dtype=torch.float32), tensor([[1.9799e-13, 1.0598e-13, 9.7602e-16,  ..., 1.8887e-15, 1.8887e-15,
         1.8887e-15]], dtype=torch.float32), tensor([[8.9166e-12, 3.3844e-12, 1.0617e-13,  ..., 4.1779e-14, 4.1779e-14,
         4.1779e-14]], dtype=torch.float32), tensor([[2.5789e-13, 5.0492e-13, 1.5427e-14,  ..., 4.5071e-15, 4.5071e-15,
         4.5071e-15]], dtype=torch.float32), tensor([[5.8125e-13, 2.0521e-14, 3.0083e-16,  ..., 1.7227e-16, 1.7227e-16,
         1.7227e-16]], dtype=torch.float32), tensor([[3.0905e-17, 1.8201e-18, 1.8960e-19,  ..., 5.9445e-18, 5.9445e-18,
         5.9445e-18]], dtype=torch.float32), tensor([[4.8268e-14, 2.1802e-13, 5.9603e-14,  ..., 7.0632e-15, 7.0632e-15,
         7.0632e-15]], dtype=torch.float32), tensor([[7.9250e-15, 3.6645e-14, 3.1771e-15,  ..., 1.8493e-16, 1.8493e-16,
         1.8493e-16]], dtype=torch.float32), tensor([[1.0820e-13, 1.0820e-13, 2.9165e-17,  ..., 2.9311e-16, 2.9325e-16,
         2.9329e-16]], dtype=torch.float32), tensor([[1.4350e-14, 6.9248e-16, 3.0380e-14,  ..., 1.7509e-16, 1.7509e-16,
         1.7509e-16]], dtype=torch.float32), tensor([[2.4131e-12, 1.1896e-14, 1.9118e-15,  ..., 3.9227e-15, 3.9227e-15,
         3.9227e-15]], dtype=torch.float32), tensor([[4.4697e-16, 2.3188e-16, 1.4286e-16,  ..., 1.7752e-13, 1.7752e-13,
         1.7752e-13]], dtype=torch.float32), tensor([[2.9905e-14, 9.2641e-15, 1.2271e-15,  ..., 4.5764e-16, 4.5764e-16,
         4.5764e-16]], dtype=torch.float32), tensor([[4.8343e-11, 7.2571e-11, 1.3988e-10,  ..., 3.1885e-12, 3.1885e-12,
         3.1885e-12]], dtype=torch.float32), tensor([[2.1298e-12, 1.5080e-09, 3.4373e-11,  ..., 1.0771e-13, 1.0771e-13,
         1.0771e-13]], dtype=torch.float32), tensor([[9.8628e-15, 1.4350e-14, 7.1446e-16,  ..., 8.5819e-18, 8.5819e-18,
         8.5819e-18]], dtype=torch.float32), tensor([[1.3630e-16, 1.2410e-16, 4.8159e-19,  ..., 3.8962e-19, 3.8962e-19,
         3.8962e-19]], dtype=torch.float32), tensor([[6.5461e-12, 1.1921e-12, 5.1768e-14,  ..., 8.9960e-15, 8.9960e-15,
         8.9960e-15]], dtype=torch.float32), tensor([[2.0464e-16, 1.3213e-16, 2.6683e-18,  ..., 7.2662e-19, 7.2662e-19,
         7.2662e-19]], dtype=torch.float32), tensor([[1.5450e-13, 1.5297e-14, 9.7970e-17,  ..., 1.2878e-16, 1.2878e-16,
         1.2878e-16]], dtype=torch.float32), tensor([[4.4412e-13, 2.5657e-12, 1.9289e-13,  ..., 1.4195e-13, 1.4195e-13,
         1.4195e-13]], dtype=torch.float32), tensor([[2.4382e-14, 2.2200e-14, 3.1110e-17,  ..., 1.1380e-16, 1.1380e-16,
         1.1380e-16]], dtype=torch.float32), tensor([[1.5692e-11, 3.2706e-11, 7.2010e-13,  ..., 2.8967e-13, 2.8967e-13,
         2.8967e-13]], dtype=torch.float32), tensor([[1.1400e-12, 3.4767e-13, 6.5305e-16,  ..., 3.9590e-16, 3.9590e-16,
         3.9590e-16]], dtype=torch.float32), tensor([[4.0538e-18, 6.7078e-20, 5.2130e-21,  ..., 3.0298e-19, 3.0298e-19,
         3.0298e-19]], dtype=torch.float32), tensor([[1.0336e-14, 3.5517e-14, 2.2543e-15,  ..., 4.9489e-16, 4.9489e-16,
         4.9489e-16]], dtype=torch.float32), tensor([[5.8647e-17, 1.1066e-15, 8.8357e-19,  ..., 1.7300e-18, 1.7300e-18,
         1.7333e-18]], dtype=torch.float32), tensor([[6.9938e-15, 9.6692e-17, 3.8623e-15,  ..., 6.8565e-17, 6.8565e-17,
         6.8565e-17]], dtype=torch.float32), tensor([[1.6739e-11, 6.4904e-13, 1.1522e-14,  ..., 3.4398e-14, 3.4398e-14,
         3.4398e-14]], dtype=torch.float32), tensor([[3.9125e-13, 7.8420e-13, 2.1607e-13,  ..., 2.6024e-10, 2.6024e-10,
         2.6024e-10]], dtype=torch.float32)]
============ token_entropy_list =============
token_entropy_list  [0.800265908241272, 0.3659975528717041, 0.001377645879983902, 1.129469394683838, 0.03780825436115265, 0.05177530646324158, 0.01731865294277668, 0.7115607857704163, 0.6533774137496948, 0.8997232913970947, 0.6816772818565369, 1.2057349522365257e-05, 0.8432722091674805, 0.0038332475814968348, 4.3300315155647695e-06, 9.406937897438183e-05, 0.07633679360151291, 0.0006874752580188215, 5.446804061648436e-05, 0.0009752989280968904, 0.0007580203237012029, 0.00046243160613812506, 3.971245860157069e-06, 2.0188967027934268e-05, 0.000287209841189906, 0.00016167352441698313, 6.089834641898051e-05, 7.206679697446816e-08, 2.969671731989365e-05, 3.44297441188246e-05, 1.6661113022564678e-06, 1.4926195945008658e-05, 1.5638120203220751e-06, 2.3701091777184047e-05, 0.019242646172642708, 0.2913176417350769, 2.2795312304424442e-08, 4.7569701564498246e-06, 1.7016203855746426e-05, 6.57297221096087e-08, 1.6286892901007377e-07, 2.4899927666410804e-06, 0.0003549896355252713, 3.12476659019012e-05, 1.838349561467112e-07, 1.2629869843294728e-06, 9.833684089244343e-06, 7.279260898940265e-05, 0.00014721837942488492, 0.0003222125815227628, 0.013025470077991486, 0.0035819720942527056, 0.9609438180923462, 0.2385600209236145, 2.6546893423073925e-05, 1.6031000996008515e-05, 0.14381267130374908, 0.42125824093818665, 0.3479589819908142, 0.00023111783957574517, 0.003148337360471487, 0.0016051328275352716, 1.3499667147698347e-05, 4.274068317045021e-07, 1.2190843108328409e-06, 2.2034601698806e-08, 1.4489282662566438e-08, 4.9125006285066775e-09, 4.554628389996651e-07, 4.305510259428047e-08, 9.608420441509224e-07, 7.17898558377783e-08, 1.0420665441657206e-09, 1.3116438424276566e-07, 2.9739883444790394e-08, 1.1572505620449647e-08, 9.292834147345275e-05, 3.816979443627133e-08, 3.024313457444805e-07, 3.337260778835116e-08, 7.055355126794893e-07, 1.9760798750212416e-05, 0.0002847575524356216, 4.876054299529642e-05, 1.7391785149811767e-06, 2.645832068992604e-07, 2.3332968339673243e-05, 1.319027978752274e-05, 0.010181978344917297, 0.0028688572347164154, 7.778839972161222e-06, 4.372320745460456e-07, 9.712113779869469e-08, 7.471712848428069e-08, 2.119229014496682e-09, 1.8245730259991433e-08, 1.7624327028897824e-06, 4.564073776691657e-07, 1.2046411939081736e-05, 3.005192894534048e-08, 9.569873782311333e-10, 5.2875907385896426e-06, 2.2491708051575188e-08, 6.083253083488671e-07, 9.2977803234362e-09, 7.8050774732219e-09, 2.5001847916428233e-06, 2.4461579428702862e-08, 2.3155712369771209e-07, 1.2419154593601434e-08, 2.6499777927568857e-09, 1.3496304518412217e-07, 1.925439185868072e-08, 6.900837234979917e-08, 2.4650839236528554e-07, 9.319685467801264e-09, 6.420303293452889e-07, 1.3149692001945823e-08, 3.6020492188981734e-06, 3.9694106817478314e-05, 1.3413523625160906e-08, 4.4870365201177265e-09, 2.5724597207954503e-07, 2.6163368715970137e-07, 4.020910182589432e-06, 4.748938408738468e-06, 4.979214281775057e-05, 0.0022602262906730175, 9.012181544676423e-05, 0.1214350163936615, 0.060647666454315186, 0.6407501697540283, 0.005491921678185463, 0.01731571927666664, 1.1756465028156526e-05, 0.044659923762083054, 0.0006145874503999949, 0.09497318416833878, 1.6190926544368267e-05, 0.0004681514110416174, 0.0003154104924760759, 1.4830225154582877e-06, 6.467931143561145e-06, 0.0024787127040326595, 0.5065377354621887, 3.057805386674772e-08, 1.681029146993751e-07, 1.981339664780535e-06, 6.393926810233097e-07, 0.00036968919448554516, 0.0012813349021598697, 6.236600165721029e-05, 0.020337430760264397, 0.0023210556246340275, 0.0021107648499310017, 0.04455064982175827, 5.769661220256239e-05, 9.408237389152418e-08, 2.4605265934951603e-05, 1.132458055508323e-05, 0.00010328830103389919, 0.685559868812561, 6.077394573367201e-05, 0.001747208763845265, 1.1725147487595677e-05, 7.02097822795622e-05, 2.1873096557101235e-05, 0.01703096553683281, 9.295923518948257e-05, 9.432356478100701e-07, 1.0991848284902517e-05, 0.0035840473137795925, 0.040185343474149704, 0.1094183549284935, 0.7380936145782471, 0.6984942555427551, 0.6598087549209595, 1.977298325073207e-06, 0.31475767493247986, 0.8735802173614502, 0.1171766072511673, 0.008565470576286316, 5.516186502063647e-05, 0.6812379956245422, 0.04398535192012787, 0.5843467712402344, 0.8072854280471802, 0.11051324754953384, 0.04418126866221428, 0.0792497768998146, 0.3732958734035492, 0.3786621689796448, 4.089569074494648e-07, 3.400903005967848e-05, 0.0008198439027182758, 0.00035951347672380507, 0.01561744511127472, 0.04945585876703262, 0.005946971941739321, 0.01946277916431427, 0.07727950066328049, 0.00013698051043320447, 0.8123236894607544, 0.4862544536590576, 0.015129473991692066, 0.19087471067905426, 2.5699506295495667e-05, 0.6867821216583252, 8.06563111837022e-05, 0.06051822751760483, 7.229884431581013e-06, 0.0012746895663440228, 0.0027527627535164356, 0.0014202918391674757, 0.7175148129463196, 1.975457234948408e-05, 2.4536419005016796e-05, 0.0037762883584946394, 0.1740846037864685, 0.002421231009066105, 0.13335657119750977, 0.089858777821064, 0.010006613098084927, 1.0342094898223877, 0.0003965276409871876, 8.283349473003909e-08, 5.5737284128554165e-05, 4.4013704609824345e-06, 6.627138645853847e-05, 0.006812417879700661, 0.04235174506902695]
============ tokenwise_entropy =============
('Here', 0.800265908241272)
(' is', 0.3659975528717041)
(' the', 0.001377645879983902)
(' missing', 1.129469394683838)
(' part', 0.03780825436115265)
(' of', 0.05177530646324158)
(' the', 0.01731865294277668)
(' code', 0.7115607857704163)
(':\n', 0.6533774137496948)
('``', 0.12051758915185928)
('`\n', 2.090448106173426e-05)
('def', 1.009437918663025)
(' has', 2.393689464952331e-05)
('_close', 0.0009953188709914684)
('_elements', 0.0006677097990177572)
('(numbers', 0.00028715759981423616)
(':', 5.029195108363638e-06)
(' List', 4.801829709322192e-05)
('[float', 0.0002917814999818802)
('],', 0.00019202858675271273)
(' threshold', 6.082947948016226e-05)
(':', 6.256041018559699e-08)
(' float', 2.167657839891035e-05)
(')', 7.674199878238142e-06)
(' ->', 1.2559821698232554e-06)
(' bool', 1.4714228200318757e-05)
(':\n', 1.8470259419700596e-06)
('   ', 0.0007528593996539712)
(' for', 0.5895076990127563)
(' i', 0.0028858259320259094)
(' in', 0.017313281074166298)
(' range', 1.4394352547242306e-05)
('(len', 0.06700395792722702)
('(numbers', 0.0006514096749015152)
(')):\n', 0.4344315230846405)
('       ', 1.7545671653351746e-05)
(' for', 0.00016121752560138702)
(' j', 5.661416071234271e-05)
(' in', 5.99796294409316e-07)
(' range', 0.00019377819262444973)
('(i', 0.0005856940988451242)
(' +', 0.5825603604316711)
(' ', 6.594099155599054e-10)
('1', 4.3729254883828617e-08)
(',', 1.4357679845034e-07)
(' len', 7.331466349569382e-07)
('(numbers', 0.0003111911646556109)
(')):\n', 0.0008184444159269333)
('           ', 3.895152985933237e-05)
(' if', 0.004865565337240696)
(' abs', 0.001153476070612669)
('(numbers', 0.0015192676801234484)
('[i', 0.023817813023924828)
(']', 5.632317333947867e-05)
(' -', 3.634777812067114e-08)
(' numbers', 1.6183570551220328e-05)
('[j', 1.1497897503431886e-05)
('])', 0.00011486756557133049)
(' <=', 0.6855268478393555)
(' threshold', 5.295682785799727e-05)
(':\n', 0.0004948595887981355)
('               ', 5.800939561595442e-06)
(' return', 4.584242560667917e-06)
(' True', 2.7802350814454257e-05)
('\n', 0.0023691037204116583)
('   ', 1.984329537663143e-05)
(' return', 1.471002519792819e-07)
(' False', 9.04563694348326e-06)
('\n', 0.002370963804423809)
('``', 0.001111576915718615)
('`\n', 0.0004859879845753312)
('This', 0.7187891602516174)
(' function', 0.7357814311981201)
(' iter', 0.4769946336746216)
('ates', 6.065299089641485e-07)
(' over', 0.5822176337242126)
(' the', 0.6198602318763733)
(' list', 0.11824586987495422)
(' of', 0.00525190494954586)
(' numbers', 7.566310523543507e-05)
(' and', 0.7487205862998962)
(' checks', 0.006281229667365551)
(' if', 0.32329225540161133)
(' any', 0.5298079252243042)
(' two', 0.04956214874982834)
(' numbers', 0.04544610157608986)
(' are', 0.05084002763032913)
(' closer', 0.27185848355293274)
(' to', 0.16629017889499664)
(' each', 3.179116561113915e-07)
(' other', 1.516632255516015e-05)
(' than', 0.0014177903067320585)
(' the', 9.298980148741975e-05)
(' given', 0.01470623817294836)
(' threshold', 0.09023452550172806)
('.', 0.036271803081035614)
(' If', 0.00805628765374422)
(' it', 0.03445512428879738)
(' finds', 9.301556565333158e-05)
(' such', 0.7994707822799683)
(' a', 0.03004414588212967)
(' pair', 0.00013908345135860145)
(',', 0.06049283966422081)
(' it', 9.354248504678253e-06)
(' immediately', 0.5579797625541687)
(' returns', 4.053060547448695e-05)
(' `', 0.0033793486654758453)
('True', 9.762638910615351e-06)
('`.', 0.00033809460001066327)
(' If', 0.0017397793708369136)
(' it', 0.001788871013559401)
(' doesn', 0.726513147354126)
("'t", 0.000247017276706174)
(' find', 3.712707621161826e-05)
(' any', 0.049641016870737076)
(' such', 0.19703727960586548)
(' pair', 0.10943832993507385)
(' after', 0.22754037380218506)
(' checking', 0.1541043221950531)
(' all', 0.00899497140198946)
(' numbers', 1.1250081062316895)
(',', 8.947294554673135e-05)
(' it', 6.760571835684459e-08)
(' returns', 2.948931978608016e-05)
(' `', 4.980801350029651e-06)
('False', 8.177979907486588e-05)
('`.', 0.6938334107398987)
('<|eot_id|>', 0.016597189009189606)
============ line_entropies =============
('Here is the completed code:', 0.61433388851583)
('', 0.6003937721252441)
('```python', 0.537454417920344)
('from typing import List', 0.012250982677452763)
('', 0.07272498309612274)
('def has_close_elements(numbers: List[float], threshold: float) -> bool:', 0.004447891247408239)
('    """ Check if in given list of numbers, are any two numbers closer to each other than given threshold.', 0.09443021606966401)
('    >>> has_close_elements([1.0, 2.0, 3.0], 0.5)', 0.07624922630851262)
('    False', 8.946633010964433e-05)
('    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0], 0.3)', 0.00019222645101346907)
('    True', 0.0003918287743545079)
('    """', 0.02826916997855733)
('    for i in range(len(numbers)):', 0.09258005301004839)
('        for j in range(i + 1, len(numbers)):', 0.03474592014972349)
('            if abs(numbers[i] - numbers[j]) <= threshold:', 0.055472481391858154)
('                return True', 0.006357334682252258)
('    return False', 0.0071300281012781856)
('```', 0.06624482292681932)
('', 0.08165494352579117)
("This function iterates over the list of numbers and checks if any two numbers are closer to each other than the given threshold. If it finds such a pair, it returns `True`. If it doesn't find any such pair after checking all numbers, it returns `False`.<|eot_id|>", 0.2044973827815067)
